---
- name: Skip if pyenv is installed
  shell: pyenv version-name
  args:
    executable: /bin/bash
  register: pyenv_installed
  changed_when: false
  failed_when: false
  tags: ["pyenv"]
- name: pyenv
  block:
    - name: Ensure pyenv is installed at $HOME/.pyenv
      git:
        repo: "https://github.com/pyenv/pyenv.git"
        dest: $HOME/.pyenv
        update: yes
    - name: Ensure previous installation is removed if different
      shell: "$HOME/.pyenv/bin/pyenv uninstall -f $($HOME/.pyenv/bin/pyenv version-name)"
    - name: Ensure selected version of Python is installed with pyenv
      shell: "$HOME/.pyenv/bin/pyenv install {{ python_to_install }} -s"
      register: output
      changed_when: '"Installed" in output'
      failed_when: output.rc != 0
    - name: Ensure selected version of Python is set to global
      shell: '$HOME/.pyenv/bin/pyenv global "{{ python_to_install }}" && $HOME/.pyenv/bin/pyenv global'
      register: output
      failed_when: "python_to_install != output.stdout or output.rc != 0"
      changed_when: false
    - name: Ensure Python packages are installed to global pyenv
      shell: '$HOME/.pyenv/shims/pip install {{ python_packages_to_install | join(" ") }}'
      register: output
      failed_when: output.rc != 0
      changed_when: '"Requirement already satisfied" not in output.stdout'
  when: "pyenv_installed.rc != 0 or python_to_install not in pyenv_installed.stdout"
  tags: ["pyenv"]
