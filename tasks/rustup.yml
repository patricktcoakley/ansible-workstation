---
- name: rustup
  block:
    - name: Skip if rustup is installed
      shell: rustup -V
      args:
        executable: /bin/bash
      register: rustup_installed
      changed_when: false
      failed_when: false
    - name: rustup installation
      block:
        - name: Download rustup
          uri:
            url: https://sh.rustup.rs
            return_content: yes
          register: rustup_installer
        - name: Run rustup installer
          shell:
            cmd: sh -s -- -y
            stdin: "{{ rustup_installer.content }}"
          register: output
          changed_when: '"Rust is installed now" in output.stdout'
          failed_when: output.rc != 0
        - name: Ensure bash completions folder is created
          file:
            path: $HOME/.local/share/bash-completion/completions
            state: directory
        - name: Bash completions
          shell: $HOME/.cargo/bin/rustup completions bash > ~/.local/share/bash-completion/completions/rustup && $HOME/.cargo/bin/rustup completions bash cargo > ~/.local/share/bash-completion/completions/cargo
          register: output
          failed_when: output.rc != 0
      when: "rustup_installed.rc != 0"
- name: rust-analyzer
  block:
    - name: Ensure repo is downloaded
      git:
        repo: "https://github.com/rust-lang/rust-analyzer.git"
        dest: $HOME/.rustanalyzer
        update: yes
    - name: Install rust analyzer binary
      shell:
        cmd: $HOME/.cargo/bin/cargo xtask install --server
        chdir: $HOME/.rustanalyzer
      register: output
      failed_when: output.rc != 0
      changed_when: false
  when: 'ansible_system == "Linux" and ansible_facts["distribution"]  != "Archlinux"'
- name: helix
  block:
    - name: Ensure repo is downloaded
      git:
        repo: "https://github.com/helix-editor/helix"
        dest: $HOME/.helix
        update: yes
    - name: Install helix binary
      shell:
        cmd: $HOME/.cargo/bin/cargo install --path helix-term
        chdir: $HOME/.helix
      register: output
      failed_when: output.rc != 0
      changed_when: false
    - name: Link runtime directory
      shell: ln -s $HOME/.helix/runtime $HOME/.config/helix/runtime
  when: 'ansible_system == "Linux" and ansible_facts["distribution"]  != "Archlinux"'
