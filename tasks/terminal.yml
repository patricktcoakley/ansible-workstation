---
- name: Install cargo packages
  shell: "$HOME/.cargo/bin/cargo install zellij alacritty ripgrep starship skim --locked"
  register: output
  failed_when: output.rc != 0
  tags: ["terminal"]
  when: 'ansible_system == "Linux" and ansible_facts["distribution"]  != "Archlinux"'
- name: Setup Alacritty desktop file
  block:
    - name: Ensure applications folder is created
      file:
        path: $HOME/.local/share/applications
        state: directory
    - name: Ensure pixmaps folder is created
      file:
        path: $HOME/.local/share/pixmaps
        state: directory
    - name: Ensure Alacritty desktop file is copied
      template:
        src: "templates/Alacritty.desktop.j2"
        dest: "$HOME/.local/share/applications/Alacritty.desktop"
    - name: Ensure Alacritty icon is copied
      copy:
        src: "files/home/.local/share/pixmaps/Alacritty.svg"
        dest: "$HOME/.local/share/pixmaps/Alacritty.svg"
    - name: Update desktop database
      shell:
        cmd: update-desktop-database ~/.local/share/applications
      register: output
      failed_when: output.rc != 0
  when: 'ansible_system == "Linux" and ansible_facts["distribution"]  != "Archlinux"'
  tags: ["terminal"]
- name: rust-analyzer
  block:
    - name: Ensure repo is downloaded
      git:
        repo: "https://github.com/rust-lang/rust-analyzer.git"
        dest: $HOME/.rustanalyzer
        update: yes
    - name: Install rust analyzer binary
      shell:
        cmd: $HOME/.cargo/bin/cargo xtask install --server
        chdir: $HOME/.rustanalyzer
      register: output
      failed_when: output.rc != 0
      changed_when: false
  when: 'ansible_system == "Linux" and ansible_facts["distribution"]  != "Archlinux"'
- name: helix
  block:
    - name: Ensure repo is downloaded
      git:
        repo: "https://github.com/helix-editor/helix"
        dest: $HOME/.helix
        update: yes
    - name: Install helix binary
      shell:
        cmd: $HOME/.cargo/bin/cargo install --path helix-term
        chdir: $HOME/.helix
      register: output
      failed_when: output.rc != 0
      changed_when: false
    - name: Link runtime directory
      shell: ln -s $HOME/.helix/runtime $HOME/.config/helix/runtime
  when: 'ansible_system == "Linux" and ansible_facts["distribution"]  != "Archlinux"'
